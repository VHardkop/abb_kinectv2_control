<launch>
	  <!-- By default, we do not start a database (it can be large) -->
	  <arg name="db" default="false" />
	  <!-- Allow user to specify database location -->
	  <arg name="db_path" default="$(find abb_irb1600_6_12_moveit_config)/default_warehouse_mongo_db" />

	  <!-- By default, we are not in debug mode -->
	  <arg name="debug" default="false" />

	  <!-- Load the URDF, SRDF and other .yaml configuration files on the param server -->
	  <include file="$(find abb_irb1600_6_12_moveit_config)/launch/planning_context.launch">
	    <arg name="load_robot_description" value="true"/>
	  </include>

	  <!-- If needed, broadcast static tf for robot root -->

	  <!-- We do not have a robot connected, so publish fake joint states -->
	  <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher">
	    <param name="/use_gui" value="false"/>
	    <rosparam param="/source_list">[/move_group/fake_controller_joint_states]</rosparam>
	  </node>

	  <!-- Given the published joint states, publish tf for the robot links -->
	  <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" respawn="true" output="screen" />

	  <!-- Run the main MoveIt executable without trajectory execution (we do not have controllers configured by default) -->
	  <include file="$(find abb_irb1600_6_12_moveit_config)/launch/move_group.launch">
	    <arg name="allow_trajectory_execution" value="true"/>
	    <arg name="fake_execution" value="true"/>
	    <arg name="info" value="true"/>
	    <arg name="debug" value="$(arg debug)"/>
	  </include>

	  <!-- Run Rviz and load the default config to see the state of the move_group node -->
	  <include file="$(find abb_irb1600_6_12_moveit_config)/launch/moveit_rviz.launch">
	    <arg name="config" value="true"/>
	    <arg name="debug" value="$(arg debug)"/>
	  </include>

	  <!-- If database loading was enabled, start mongodb as well -->
	  <include file="$(find abb_irb1600_6_12_moveit_config)/launch/default_warehouse_db.launch" if="$(arg db)">
	    <arg name="moveit_warehouse_database_path" value="$(arg db_path)"/>
	  </include>

	<arg name="tracker_name" default="kinect" />

	<node pkg="kinect2_tracker" type="kinect2_tracker_node" name="kinect2_tracker_node2">
		<param name="tf_prefix" value="$(arg tracker_name)" />
    		<param name="relative_frame" value="/$(arg tracker_name)_camera_frame" />
	</node>
	<node pkg="tf" type="static_transform_publisher" name="kinect_to_odom" args="0 0 0 1.5708 0 1.5708 /kinect_link /$(arg tracker_name)_camera_frame 50"/>
	<node pkg="tf" type="static_transform_publisher" name="foot_to_base" args="0 0 0 -0.5 0.5 0.5 0.5 kinect/user_1/left_foot base_link 10"/>
	<node pkg="kinect2_tracker" type="hand_follower.py" name="user_1_right_hand" />
	<node pkg="kinect2_tracker" type="abb_mover.py" name="abb_1_mover" />
	<node pkg="kinect2_tracker" type="move_group_class.py" name="move_group_class" />

</launch>
